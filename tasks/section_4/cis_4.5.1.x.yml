---

- name: "4.5.1.1 | PATCH | Ensure minimum days between password changes is configured"
  block:
      - name: "4.5.1.1 | PATCH | Ensure minimum days between password changes is configured | Set /etc/login.defs PASS_MIN_DAYS"
        ansible.builtin.lineinfile:
            path: /etc/login.defs
            regexp: '^PASS_MIN_DAYS|^#PASS_MIN_DAYS'
            line: 'PASS_MIN_DAYS {{ ubtu20cis_pass.min_days }}'

      - name: "4.5.1.1 | PATCH | Ensure minimum days between password changes is configured | Get existing users PASS_MIN_DAYS"
        ansible.builtin.shell: "awk -F: '(/^[^:]+:[^!*]/ && ($4<{{ ubtu20cis_pass.min_days }})) {print $1}' /etc/shadow"
        changed_when: false
        failed_when: false
        register: ubtu20cis_4_5_1_1_min_days

      - name: "4.5.1.1 | PATCH | Ensure minimum days between password changes is configured | Set existing users PASS_MIN_DAYS"
        ansible.builtin.shell: chage --mindays {{ ubtu20cis_pass.min_days }} {{ item }}
        failed_when: false
        changed_when: ubtu20cis_4_5_1_1_min_days.stdout |length > 0
        loop: "{{ ubtu20cis_4_5_1_1_min_days.stdout_lines }}"
        when:
            - ubtu20cis_disruption_high
            - (item != 'root') or (not ubtu20cis_uses_root)
  when:
      - ubtu20cis_rule_4_5_1_1
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_4.5.1.1
      - user
      - login

- name: "4.5.1.2 | PATCH | Ensure password expiration is 365 days or less"
  block:
      - name: "4.5.1.2 | PATCH | Ensure password expiration is 365 days or less | Set /etc/login.defs PASS_MAX_DAYS"
        ansible.builtin.lineinfile:
            path: /etc/login.defs
            regexp: '^PASS_MAX_DAYS|^#PASS_MAX_DAYS'
            line: 'PASS_MAX_DAYS {{ ubtu20cis_pass.max_days }}'
            insertafter: '# Password aging controls'

      - name: "4.5.1.2 | PATCH | Ensure password expiration is 365 days or less | Get existing users PASS_MAX_DAYS"
        ansible.builtin.shell: "awk -F: '(/^[^:]+:[^!*]/ && ($5>{{ ubtu20cis_pass.max_days }} || $5<{{ ubtu20cis_pass.min_days }} || $5 == -1)){print $1}' /etc/shadow"
        changed_when: false
        failed_when: false
        register: ubtu20cis_4_5_1_2_max_days

      - name: "4.5.1.2 | PATCH | Ensure password expiration is 365 days or less | Set existing users PASS_MAX_DAYS"
        ansible.builtin.shell: chage --maxdays {{ ubtu20cis_pass.max_days }} {{ item }}
        failed_when: false
        changed_when: ubtu20cis_4_5_1_2_max_days.stdout | length > 0
        loop: "{{ ubtu20cis_4_5_1_2_max_days.stdout_lines }}"
        when:
            - ubtu20cis_disruption_high
            - (item != 'root') or (not ubtu20cis_uses_root)
  when:
      - ubtu20cis_rule_4_5_1_2
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_4.5.1.2
      - user
      - login

- name: "4.5.1.3 | PATCH | Ensure password expiration warning days is 7 or more"
  block:
      - name: "4.5.1.3 | PATCH | Ensure password expiration warning days is 7 or more | Set /etc/login.defs PASS_WARN_AGE"
        ansible.builtin.lineinfile:
            path: /etc/login.defs
            regexp: '^PASS_WARN_AGE|^#PASS_WARN_AGE'
            line: 'PASS_WARN_AGE {{ ubtu20cis_pass.warn_age }}'

      - name: "4.5.1.3 | PATCH | Ensure password expiration warning days is 7 or more | Get existing users PASS_WARN_AGE"
        ansible.builtin.shell: "awk -F: '(/^[^:]+:[^!*]/ && $6<{{ ubtu20cis_pass.warn_age }}){print $1}' /etc/shadow"
        changed_when: false
        failed_when: false
        register: ubtu20cis_4_5_1_3_warn_days

      - name: "4.5.1.3 | PATCH | Ensure password expiration warning days is 7 or more | Set existing users PASS_WARN_AGE"
        ansible.builtin.shell: chage --maxdays {{ ubtu20cis_pass.warn_age }} {{ item }}
        failed_when: false
        changed_when: ubtu20cis_4_5_1_3_warn_days.stdout | length > 0
        loop: "{{ ubtu20cis_4_5_1_3_warn_days.stdout_lines }}"
        when:
            - ubtu20cis_disruption_high
            - (item != 'root') or (not ubtu20cis_uses_root)
  when:
      - ubtu20cis_rule_4_5_1_3
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_4.5.1.3
      - user
      - login

- name: "4.5.1.4 | PATCH | Ensure inactive password lock is 30 days or less"
  block:
      - name: "4.5.1.4 | AUDIT | Ensure inactive password lock is 30 days or less | Get current inactive period"
        ansible.builtin.shell: useradd -D | grep INACTIVE | cut -d= -f2
        changed_when: false
        failed_when: false
        register: ubtu20cis_4_5_1_5_inactive_period

      - name: "4.5.1.4 | AUDIT | Ensure inactive password lock is 30 days or less | Get current users out of compliance"
        ansible.builtin.shell: awk -F":" '(/^[^:]+:[^!*]/ && ($7<0 || $7>30)){print $1}' //etc/shadow
        changed_when: false
        failed_when: false
        register: ubtu20cis_4_5_1_4_current_users

      - name: "4.5.1.4 | PATCH | Ensure inactive password lock is 30 days or less | Set inactive period for new users"
        ansible.builtin.shell: useradd -D -f {{ ubtu20cis_pass.inactive }}
        changed_when: true
        failed_when: false
        when: ubtu20cis_4_5_1_5_inactive_period.stdout != ubtu20cis_pass.inactive | string

      - name: "4.5.1.4 | PATCH | Ensure inactive password lock is 30 days or less | Set inactive period for existing users"
        ansible.builtin.shell: chage --inactive {{ ubtu20cis_pass.inactive }} {{ item }}
        failed_when: false
        with_items:
            - "{{ ubtu20cis_passwd | selectattr('uid', '>=', 1000) | map(attribute='id') | list | intersect(ubtu20cis_4_5_1_4_current_users.stdout_lines) | list }}"
        when:
            - ubtu20cis_disruption_high
            - ubtu20cis_4_5_1_4_current_users.stdout | length > 0
  when:
      - ubtu20cis_rule_4_5_1_4
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_4.5.1.4
      - user
      - login

- name: "4.5.1.5 | PATCH | Ensure all users last password change date is in the past"
  block:
      - name: "4.5.1.5 | AUDIT | Ensure all users last password change date is in the past | Get current date in Unix Time"
        ansible.builtin.shell: echo $(($(date --utc --date "$1" +%s)/86400))
        changed_when: false
        failed_when: false
        check_mode: false
        register: ubtu20cis_4_5_1_5_current_time

      - name: "4.5.1.5 | AUDIT | Ensure all users last password change date is in the past | Get list of users with last changed PW date in future"
        ansible.builtin.shell: "cat /etc/shadow | awk -F: '{if($3>{{ ubtu20cis_4_5_1_5_current_time.stdout }})print$1}'"
        changed_when: false
        failed_when: false
        check_mode: false
        register: ubtu20cis_4_5_1_5_user_list

      - name: "4.5.1.5 | PATCH | Ensure all users last password change date is in the past | Warn about users"
        ansible.builtin.debug:
            msg:
                - "Warning!! The following accounts have the last PW change date in the future"
                - "{{ ubtu20cis_4_5_1_5_user_list.stdout_lines }}"
        when: ubtu20cis_4_5_1_5_user_list.stdout | length > 0

      - name: "4.5.1.5 | PATCH | Ensure all users last password change date is in the past | Warn Count"
        ansible.builtin.import_tasks:
            file: warning_facts.yml
        when: ubtu20cis_4_5_1_5_user_list.stdout | length > 0

      - name: "4.5.1.5 | PATCH | Ensure all users last password change date is in the past | Lock accounts with future PW changed dates"
        ansible.builtin.shell: passwd --expire {{ item }}
        failed_when: false
        with_items:
            - "{{ ubtu20cis_4_5_1_5_user_list.stdout_lines }}"
        when:
            - ubtu20cis_disruption_high
            - ubtu20cis_4_5_1_5_user_list.stdout | length > 0
  vars:
      warn_control_id: '4.5.1.5'
  when:
      - ubtu20cis_rule_4_5_1_5
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_4.5.1.5
      - user
      - login

- name: "4.5.1.6 | PATCH | Ensure the number of changed characters in a new password is configured"
  ansible.builtin.lineinfile:
      path: /etc/security/pwquality.conf
      regexp: '^(#\s+|)difok'
      line: 'difok = {{ ubtu20cis_pass.character_changed }}'
      create: true
      mode: 0640
  when:
      - ubtu20cis_rule_4_5_1_6
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_4.5.1.6
      - user
      - login

- name: "4.5.1.7 | PATCH | Ensure the number of changed characters in a new password is configured"
  ansible.builtin.lineinfile:
      path: /etc/security/pwquality.conf
      regexp: '^(#\s+|)dictcheck'
      line: 'dictcheck = 1'
      create: true
      mode: 0640
  when:
      - ubtu20cis_rule_4_5_1_7
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_4.5.1.7
      - user
      - login
