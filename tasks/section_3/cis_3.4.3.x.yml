---

- name: "3.4.3.1.1 | PATCH | Ensure iptables packages are installed"
  ansible.builtin.package:
      name: ['iptables', 'iptables-persistent']
      state: present
  when:
      - ubtu20cis_rule_3_4_3_1_1
      - ubtu20cis_firewall_package == "iptables"
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_3.4.3.1.1
      - iptables

- name: "3.4.3.1.2 | PATCH | Ensure nftables is not installed with iptables"
  ansible.builtin.package:
      name: nftables
      state: absent
  when:
      - ubtu20cis_rule_3_4_3_1_2
      - ubtu20cis_firewall_package == "iptables"
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_3.4.3.1.2
      - iptables

- name: "3.4.3.1.3 | PATCH | Ensure ufw is uninstalled or disabled with iptables"
  ansible.builtin.package:
      name: ufw
      state: absent
  when:
      - ubtu20cis_rule_3_4_3_1_3
      - ubtu20cis_firewall_package == "iptables"
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_3.4.3.1.3
      - iptables

# iptables ipv4

- name: "3.4.3.2.1 | PATCH | Ensure iptables default deny firewall policy"
  block:
      - name: "3.4.3.2.1 | PATCH | Ensure iptables default deny firewall policy | Configure SSH to be allowed in"
        ansible.builtin.iptables:
            chain: INPUT
            protocol: tcp
            destination_port: 22
            jump: ACCEPT
            ctstate: 'NEW,ESTABLISHED'
        notify: persistent ip4tables

      - name: "3.4.3.2.1 | PATCH | Ensure iptables default deny firewall policy | Configure SSH to be allowed out"
        ansible.builtin.iptables:
            chain: OUTPUT
            protocol: tcp
            source_port: 22
            jump: ACCEPT
            ctstate: 'NEW,ESTABLISHED'
        notify: persistent ip4tables

      - name: "3.4.3.2.1 | PATCH | Ensure iptables default deny firewall policy | Enable apt traffic"
        ansible.builtin.iptables:
            chain: INPUT
            ctstate: 'ESTABLISHED'
            jump: ACCEPT
        notify: persistent ip4tables

      - name: "3.4.3.2.1 | PATCH | Ensure iptables default deny firewall policy | Set drop items"
        ansible.builtin.iptables:
            policy: DROP
            chain: "{{ item }}"
        with_items:
            - INPUT
            - FORWARD
            - OUTPUT
        notify: persistent ip4tables
  when:
      - ubtu20cis_rule_3_4_3_2_1
      - ubtu20cis_firewall_package == "iptables"
      - ubtu20cis_ipv4_required
      - not system_is_ec2
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_3.4.3.2.1
      - iptables

- name: "3.4.3.2.2 | PATCH | Ensure iptables loopback traffic is configured"
  block:
      - name: "3.4.3.2.2 | PATCH | Ensure iptables loopback traffic is configured | INPUT loopback ACCEPT"
        ansible.builtin.iptables:
            action: append
            chain: INPUT
            in_interface: lo
            jump: ACCEPT
        notify: persistent ip4tables

      - name: "3.4.3.2.2 | PATCH | Ensure iptables loopback traffic is configured | OUTPUT loopback ACCEPT"
        ansible.builtin.iptables:
            action: append
            chain: OUTPUT
            out_interface: lo
            jump: ACCEPT
        notify: persistent ip4tables

      - name: "3.4.3.2.2 | PATCH | Ensure iptables loopback traffic is configured | OUTPUT loopback ACCEPT"
        ansible.builtin.iptables:
            action: append
            chain: INPUT
            source: 127.0.0.0/8
            jump: DROP
        notify: persistent ip4tables
  when:
      - ubtu20cis_rule_3_4_3_2_2
      - ubtu20cis_firewall_package == "iptables"
      - ubtu20cis_ipv4_required
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_3.4.3.2.2
      - iptables

- name: "3.4.3.2.3 | PATCH | Ensure iptables outbound and established connections are configured"
  ansible.builtin.iptables:
      action: append
      chain: '{{ item.chain }}'
      protocol: '{{ item.protocol }}'
      match: state
      ctstate: '{{ item.ctstate }}'
      jump: ACCEPT
  with_items:
      - { chain: OUTPUT, protocol: tcp, ctstate: 'NEW,ESTABLISHED' }
      - { chain: OUTPUT, protocol: udp, ctstate: 'NEW,ESTABLISHED' }
      - { chain: OUTPUT, protocol: icmp, ctstate: 'NEW,ESTABLISHED' }
      - { chain: INPUT, protocol: tcp, ctstate: 'ESTABLISHED' }
      - { chain: INPUT, protocol: udp, ctstate: 'ESTABLISHED' }
      - { chain: INPUT, protocol: icmp, ctstate: 'ESTABLISHED' }
  notify: persistent ip4tables
  when:
      - ubtu20cis_rule_3_4_3_2_3
      - ubtu20cis_firewall_package == "iptables"
      - ubtu20cis_ipv4_required
  tags:
      - level1-server
      - level1-workstation
      - manual
      - patch
      - rule_3.4.3.2.3
      - iptables

- name: "3.4.3.2.4 | AUDIT | Ensure iptables firewall rules exist for all open ports"
  block:
      - name: "3.4.3.2.4 | AUDIT | Ensure iptables firewall rules exist for all open ports | Get list of open ports"
        ansible.builtin.shell: ss -4tuln
        changed_when: false
        failed_when: false
        check_mode: false
        register: ubtu20cis_3_4_3_2_4_open_ports
        notify: persistent ip4tables

      - name: "3.4.3.2.4 | AUDIT | Ensure iptables firewall rules exist for all open ports | Get list of rules"
        ansible.builtin.shell: iptables -L INPUT -v -n
        changed_when: false
        failed_when: false
        check_mode: false
        register: ubtu20cis_3_4_3_2_4_current_rules
        notify: persistent ip4tables

      - name: "3.4.3.2.4 | AUDIT | Ensure iptables firewall rules exist for all open ports | Alert about settings"
        ansible.builtin.debug:
            msg:
                - "Warning!! Below is the list the open ports and current rules"
                - "Please create a rule for any open port that does not have a current rule"
                - "Open Ports:"
                - "{{ ubtu20cis_3_4_3_2_4_open_ports.stdout_lines }}"
                - "Current Rules:"
                - "{{ ubtu20cis_3_4_3_2_4_current_rules.stdout_lines }}"
        notify: persistent ip4tables
  when:
      - ubtu20cis_rule_3_4_3_2_4
      - ubtu20cis_firewall_package == "iptables"
      - ubtu20cis_ipv4_required
  tags:
      - level1-server
      - level1-workstation
      - automated
      - audit
      - rule_3.4.3.2.4
      - iptables

# iptable ipv6

- name: "3.4.3.3.1 | PATCH | Ensure ip6tables default deny firewall policy"
  block:
      - name: "3.4.3.3.1 | PATCH | Ensure ip6tables default deny firewall policy | Configure SSH to be allowed out"
        ansible.builtin.iptables:
            chain: OUTPUT
            protocol: tcp
            source_port: 22
            jump: ACCEPT
            ctstate: 'NEW,ESTABLISHED'
            ip_version: ipv6

      - name: "3.4.3.3.1 | PATCH | Ensure ip6tables default deny firewall policy | Enable apt traffic"
        ansible.builtin.iptables:
            chain: INPUT
            ctstate: 'ESTABLISHED'
            jump: ACCEPT
            ip_version: ipv6

      - name: "3.4.3.3.1 | PATCH | Ensure ip6tables default deny firewall policy | Set drop items"
        ansible.builtin.iptables:
            policy: DROP
            chain: "{{ item }}"
            ip_version: ipv6
        with_items:
            - INPUT
            - FORWARD
            - OUTPUT
  when:
      - ubtu20cis_rule_3_4_3_3_1
      - ubtu20cis_firewall_package == "iptables"
      - ubtu20cis_ipv6_required
      - not ubtu20cis_ipv4_required
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_3.4.3.3.1
      - ip6tables

- name: "3.4.3.3.2 | PATCH | Ensure ip6tables loopback traffic is configured"
  block:
      - name: "3.4.3.3.2 | PATCH | Ensure ip6tables loopback traffic is configured | INPUT loopback ACCEPT"
        ansible.builtin.iptables:
            action: append
            chain: INPUT
            in_interface: lo
            jump: ACCEPT
            ip_version: ipv6

      - name: "3.4.3.3.2 | PATCH | Ensure ip6tables loopback traffic is configured | OUTPUT loopback ACCEPT"
        ansible.builtin.iptables:
            action: append
            chain: OUTPUT
            out_interface: lo
            jump: ACCEPT
            ip_version: ipv6

      - name: "3.4.3.3.2 | PATCH | Ensure ip6tables loopback traffic is configured | INPUT loopback drop"
        ansible.builtin.iptables:
            action: append
            chain: INPUT
            source: ::1
            jump: DROP
            ip_version: ipv6
  when:
      - ubtu20cis_rule_3_4_3_3_2
      - ubtu20cis_firewall_package == "iptables"
      - ubtu20cis_ipv6_required
      - not ubtu20cis_ipv4_required
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_3.4.3.3.2
      - ip6tables

- name: "3.4.3.3.3 | PATCH | Ensure ip6tables outbound and established connections are configured"
  ansible.builtin.iptables:
      action: append
      chain: '{{ item.chain }}'
      protocol: '{{ item.protocol }}'
      match: state
      ctstate: '{{ item.ctstate }}'
      jump: ACCEPT
      ip_version: ipv6
  with_items:
      - { chain: OUTPUT, protocol: tcp, ctstate: 'NEW,ESTABLISHED' }
      - { chain: OUTPUT, protocol: udp, ctstate: 'NEW,ESTABLISHED' }
      - { chain: OUTPUT, protocol: icmp, ctstate: 'NEW,ESTABLISHED' }
      - { chain: INPUT, protocol: tcp, ctstate: 'ESTABLISHED' }
      - { chain: INPUT, protocol: udp, ctstate: 'ESTABLISHED' }
      - { chain: INPUT, protocol: icmp, ctstate: 'ESTABLISHED' }
  when:
      - ubtu20cis_rule_3_4_3_3_3
      - ubtu20cis_firewall_package == "iptables"
      - ubtu20cis_ipv6_required
      - not ubtu20cis_ipv4_required
  tags:
      - level1-server
      - level1-workstation
      - manual
      - patch
      - rule_3.4.3.3.3
      - ip6tables

- name: "3.4.3.3.4 | AUDIT | Ensure ip6tables firewall rules exist for all open ports"
  block:
      - name: "3.4.3.3.4 | AUDIT | Ensure ip6tables firewall rules exist for all open ports | Get list of open ports"
        ansible.builtin.shell: ss -6tuln
        changed_when: false
        failed_when: false
        check_mode: false
        register: ubtu20cis_3_4_3_3_4_open_ports

      - name: "3.4.3.3.4 | AUDIT | Ensure ip6tables firewall rules exist for all open ports | Get list of rules"
        ansible.builtin.shell: ip6tables -L INPUT -v -n
        changed_when: false
        failed_when: false
        check_mode: false
        register: ubtu20cis_3_4_3_3_4_current_rules

      - name: "3.4.3.3.4 | AUDIT | Ensure ip6tables firewall rules exist for all open ports | Alert about settings"
        ansible.builtin.debug:
            msg:
                - "Warning!! Below is the list the open ports and current rules"
                - "Please create a rule for any open port that does not have a current rule"
                - "Open Ports:"
                - "{{ ubtu20cis_3_4_3_3_4_open_ports.stdout_lines }}"
                - "Current Rules:"
                - "{{ ubtu20cis_3_4_3_3_4_current_rules.stdout_lines }}"

      - name: "3.4.3.3.4 | AUDIT | Ensure ip6tables firewall rules exist for all open ports | Warn Count"
        ansible.builtin.import_tasks:
            file: warning_facts.yml
  vars:
      warn_control_id: '3.4.3.3.4'
  when:
      - ubtu20cis_rule_3_4_3_3_4
      - ubtu20cis_firewall_package == "iptables"
      - ubtu20cis_ipv6_required
      - not ubtu20cis_ipv4_required
  tags:
      - level1-server
      - level1-workstation
      - automated
      - audit
      - rule_3.4.3.3.4
      - ip6tables
