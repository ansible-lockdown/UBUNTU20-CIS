---

- name: "3.1.1 | PATCH | Disable IPv6"
  block:
      - name: "3.1.1 | AUDIT | Disable IPv6 | Get current GRUB_CMDLINE_LINUX settings"
        ansible.builtin.shell: grep "GRUB_CMDLINE_LINUX=" /etc/default/grub | cut -f2 -d'"'
        changed_when: false
        failed_when: false
        check_mode: false
        register: ubtu20cis_3_1_1_grub_cmdline_linux_settings

      - name: "3.1.1 | PATCH | Disable IPv6 | Add ipv6.disable if does not exist"
        ansible.builtin.lineinfile:
            path: /etc/default/grub
            regexp: '^GRUB_CMDLINE_LINUX'
            line: 'GRUB_CMDLINE_LINUX="{{ ubtu20cis_3_1_1_grub_cmdline_linux_settings.stdout }} ipv6.disable=1"'
        when: "'ipv6.disable' not in ubtu20cis_3_1_1_grub_cmdline_linux_settings.stdout"
        notify: Grub update

      - name: "3.1.1 | PATCH | Disable IPv6 | Set ipv6.disable to 1 if exists"
        ansible.builtin.replace:
            path: /etc/default/grub
            regexp: 'ipv6\.disable=.'
            replace: 'ipv6.disable=1'
        when: "'ipv6.disable' in ubtu20cis_3_1_1_grub_cmdline_linux_settings.stdout"
        notify: Grub update

      - name: "3.1.1 | PATCH | Disable IPv6 | Remove net.ipv6.conf.all.disable_ipv6"
        ansible.builtin.lineinfile:
            path: /etc/sysctl.conf
            regexp: '^net.ipv6.conf.all.disable_ipv6.*'
            state: absent
  when:
      - ubtu20cis_rule_3_1_1
      - not ubtu20cis_ipv6_required
  tags:
      - level2-server
      - level2-workstation
      - manual
      - patch
      - rule_3.1.1
      - ipv6

- name: "3.1.2 | PATCH | Ensure wireless interfaces are disabled"
  block:
      - name: "3.1.2 | PATCH | Ensure wireless interfaces are disabled | Check for wifi status "
        ansible.builtin.shell: nmcli radio wifi
        changed_when: false
        failed_when: false
        check_mode: false
        register: ubtu20cis_3_1_2_wifi_status
        when:
            - ubtu20cis_install_network_manager

      - name: "3.1.2 | PATCH | Ensure wireless interfaces are disabled | Disable wireless if enabled nmcli"
        ansible.builtin.shell: nmcli radio all off
        changed_when: ubtu20cis_3_1_2_nmcli_radio_off.rc == 0
        register: ubtu20cis_3_1_2_nmcli_radio_off
        when:
            - ubtu20cis_install_network_manager
            - ubtu20cis_3_1_2_wifi_status.stdout == 'enabled'

      - name: "3.1.2 | PATCH | Ensure wireless interfaces are disabled | disable driver"
        ansible.builtin.lineinfile:
            path: /etc/modprobe.d/disable_wireless.conf
            regexp: 'install\s*{{ item }}\s*/bin/true'
            line: "install {{ item.line }} /bin/true"
            create: true
        loop:
            - "{{ wireless_interfaces.stdout_lines }}"

      - name: "3.1.2 | PATCH | Ensure wireless interfaces are not loadable | blacklist"
        ansible.builtin.lineinfile:
            path: /etc/modprobe.d/blacklist.conf
            regexp: 'blacklist\s*{{ item }}\s*'
            line: "blacklist {{ item.line }}"
            create: true
        loop:
            - "{{ wireless_interfaces.stdout_lines }}"

  when:
      - ubtu20cis_rule_3_1_2
      - wireless_interfaces.stdout | length > 0
  tags:
      - level1-server
      - level2-workstation
      - automated
      - patch
      - rule_3.1.2
      - wireless

- name: "3.1.3 | PATCH | Ensure bluetooth is disabled"
  ansible.builtin.systemd:
      name: bluetooth.service
      state: stopped
      enabled: false
      masked: true
  when:
      - ubtu20cis_rule_3_1_3
      - "'bluetooth' in ansible_facts.packages"
  tags:
      - level1-server
      - automated
      - patch
      - rule_3.1.3
      - bluetooth

- name: "3.1.4 | PATCH | Ensure DCCP is disabled"
  block:
      - name: "3.1.4 | PATCH | Ensure DCCP is disabled | modprobe"
        ansible.builtin.lineinfile:
            path: /etc/modprobe.d/dccp.conf
            regexp: '^(#)?install dccp(\\s|$)'
            line: 'install dccp /bin/true'
            create: true

      - name: "3.1.4 | PATCH | Ensure DCCP is disabled | blacklist"
        ansible.builtin.lineinfile:
            path: /etc/modprobe.d/blacklist.conf
            regexp: '^(#)?blacklist dccp(\\s|$)'
            line: 'blacklist dccp'
            create: true
  when:
      - ubtu20cis_rule_3_1_4
  tags:
      - level2-server
      - level2-workstation
      - automated
      - patch
      - rule_3.1.4
      - dccp

- name: "3.1.5 | PATCH | Ensure SCTP is disabled"
  block:
      - name: "3.1.5 | PATCH | Ensure SCTP is disabled | modprobe"
        ansible.builtin.lineinfile:
            path: /etc/modprobe.d/sctp.conf
            regexp: "^(#)?install sctp(\\s|$)"
            line: 'install sctp /bin/true'
            create: true

      - name: "3.1.5 | PATCH | Ensure SCTP is disabled | blacklist"
        ansible.builtin.lineinfile:
            path: /etc/modprobe.d/blacklist.conf
            regexp: "^(#)?blacklist sctp(\\s|$)"
            line: 'blacklist sctp'
            create: true

  when:
      - ubtu20cis_rule_3_1_5
  tags:
      - level2-server
      - level2-workstation
      - automated
      - patch
      - rule_3.1.5
      - sctp

- name: "3.1.6 | PATCH | Ensure RDS is disabled"
  block:
      - name: "3.1.6 | PATCH | Ensure RDS is disabled | modprobe"
        ansible.builtin.lineinfile:
            path: /etc/modprobe.d/rds.conf
            regexp: '^(#)?install rds(\\s|$)'
            line: 'install rds /bin/true'
            create: true

      - name: "3.1.6 | PATCH | Ensure RDS is disabled | blacklist"
        ansible.builtin.lineinfile:
            path: /etc/modprobe.d/blacklist.conf
            regexp: "^(#)?blacklist rds(\\s|$)"
            line: 'blacklist rds'
            create: true
  when:
      - ubtu20cis_rule_3_1_6
  tags:
      - level2-server
      - level2-workstation
      - automated
      - patch
      - rule_3.1.6
      - rds

- name: "3.1.7 | PATCH | Ensure TIPC is disabled"
  block:
      - name: "3.1.7 | PATCH | Ensure TIPC is disabled | modprobe"
        ansible.builtin.lineinfile:
            path: /etc/modprobe.d/tipc.conf
            regexp: '^(#)?install tipc(\\s|$)'
            line: install tipc /bin/true
            create: true

      - name: "3.1.7 | PATCH | Ensure TIPC is disabled | blacklist"
        ansible.builtin.lineinfile:
            path: /etc/modprobe.d/blacklist.conf
            regexp: "^(#)?blacklist tipc(\\s|$)"
            line: 'blacklist tipc'
            create: true
  when:
      - ubtu20cis_rule_3_1_7
  tags:
      - level2-server
      - level2-workstation
      - automated
      - patch
      - rule_3.1.7
      - tipc
