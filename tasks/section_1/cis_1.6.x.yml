---
- name: "1.6.1.1 | PATCH | Ensure AppArmor is installed"
  ansible.builtin.package:
      name: ['apparmor', 'apparmor-utils']
      state: present
  when:
      - ubtu20cis_rule_1_6_1_1
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_1.6.1.1
      - apparmor

- name: "1.6.1.2 | PATCH | Ensure AppArmor is enabled in the bootloader configuration"
  block:
      - name: "1.6.1.2 | AUDIT | Ensure AppArmor is enabled in the bootloader configuration | Get current settings"
        ansible.builtin.shell: grep "GRUB_CMDLINE_LINUX=" /etc/default/grub | cut -f2 -d'"'
        changed_when: false
        failed_when: false
        check_mode: false
        register: ubtu20cis_1_6_1_2_cmdline_settings

      - name: "1.6.1.2 | PATCH | Ensure AppArmor is enabled in the bootloader configuration | Set apparmor settings if none exist"
        ansible.builtin.lineinfile:
            path: /etc/default/grub
            regexp: '^GRUB_CMDLINE_LINUX'
            line: 'GRUB_CMDLINE_LINUX="apparmor=1 security=apparmor {{ ubtu20cis_1_6_1_2_cmdline_settings.stdout }}"'
            insertafter: '^GRUB_'
        notify: Grub update
        when:
            - "'apparmor' not in ubtu20cis_1_6_1_2_cmdline_settings.stdout"
            - "'security' not in ubtu20cis_1_6_1_2_cmdline_settings.stdout"

      - name: "1.6.1.2 | PATCH | Ensure AppArmor is enabled in the bootloader configuration | Set apparmor settings if none exist | Replace apparmor settings when exists"
        ansible.builtin.replace:
            path: /etc/default/grub
            regexp: "{{ item.regexp }}"
            replace: "{{ item.replace }}"
        with_items:
            - { regexp: 'apparmor=\S+', replace: 'apparmor=1' }
            - { regexp: 'security=\S+', replace: 'security=apparmor' }
        when:
            - "'apparmor' in ubtu20cis_1_6_1_2_cmdline_settings.stdout"
            - "'security' in ubtu20cis_1_6_1_2_cmdline_settings.stdout"
        notify: Grub update
  when:
      - ubtu20cis_rule_1_6_1_2
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_1.6.1.2
      - apparmor

# Any unconfined processes may need to have a profile created or activated for them and then be restarted So manual task
- name: "1.6.1.3 | PATCH | Ensure all AppArmor Profiles are in enforce or complain mode"
  block:
      - name: "1.6.1.3 | AUDIT | Ensure all AppArmor Profiles are in enforce or complain mode | capture state"
        ansible.builtin.shell: apparmor_status | grep "processes.*unconfined" | awk '{ print $1 }'
        changed_when: false
        failed_when: false
        register: ubtu20cis_rule_1_6_1_3_apparmor_unconfined

      - name: "1.6.1.3 | AUDIT | Ensure all AppArmor Profiles are in enforce or complain mode | Warning"
        ansible.builtin.debug:
            msg: "Warning!! AppArmor mode needs to be confirmed | Any unconfined processes may need to have a profile created"
        when: ubtu20cis_rule_1_6_1_3_apparmor_unconfined.stdout != '0'

      - name: "1.6.1.3 | AUDIT | Ensure all AppArmor Profiles are in enforce or complain mode | Warn Count"
        ansible.builtin.import_tasks:
            file: warning_facts.yml
        when: ubtu20cis_rule_1_6_1_3_apparmor_unconfined.stdout != '0'
  vars:
      warn_control_id: '1.6.1.3'
  when:
      - ubtu20cis_rule_1_6_1_3
  tags:
      - level1-server
      - level1-workstation
      - manual
      - patch
      - rule_1.6.1.3
      - apparmor

# These tasks can be forced to run but some apps may not have profiles associated so this will need to be manual task
- name: "1.6.1.4 | PATCH | Ensure all AppArmor Profiles are enforcing"
  block:
      - name: "1.6.1.4 | AUDIT | Ensure all AppArmor Profiles are enforcing | capture state"
        ansible.builtin.shell: apparmor_status | grep -E "processes.*complain" | awk '{ print $1 }'
        changed_when: false
        failed_when: false
        register: ubtu20cis_rule_1_6_1_4_apparmor_enforced

      - name: "1.6.1.4 | AUDIT | Ensure all AppArmor Profiles are enforcing | Warning"
        ansible.builtin.debug:
            msg: "Warning!! AppArmor mode is not in enforcing | Any unconfined processes may need to have a profile created"
        when: ubtu20cis_rule_1_6_1_4_apparmor_enforced.stdout != '0'

      - name: "1.6.1.4 | AUDIT | Ensure all AppArmor Profiles are enforcing | Warn Count"
        ansible.builtin.import_tasks:
            file: warning_facts.yml
        when: ubtu20cis_rule_1_6_1_4_apparmor_enforced.stdout != '0'

  vars:
      warn_control_id: '1.6.1.4'
  when:
      - ubtu20cis_rule_1_6_1_4
  tags:
      - level2-server
      - level2-workstation
      - automated
      - scored
      - patch
      - rule_1.6.1.4
      - apparmor
