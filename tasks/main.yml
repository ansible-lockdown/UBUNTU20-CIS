---

- name: Check OS version and family
  ansible.builtin.assert:
      that: ansible_distribution == 'Ubuntu' and ansible_distribution_major_version is version_compare('20', '==')
      msg: "This role can only be run against Ubuntu 20. {{ ansible_distribution }} {{ ansible_distribution_major_version }} is not supported."
  tags:
      - always

- name: Check ansible version
  ansible.builtin.assert:
      that: ansible_version.full is version_compare(min_ansible_version, '>=')
      fail_msg: "You must use Ansible {{ min_ansible_version }} or greater"
      success_msg: "This role is running a supported version of ansible {{ ansible_version.full }} >= {{ min_ansible_version }}"
  tags:
      - always

- name: Ensure grub password has been changed
  ansible.builtin.assert:
      that:
          - '"ChangeMe" not in ubtu20cis_grub_pw'
          - '"grub.pbkdf2.sha512.1000" in ubtu20cis_grub_pw'
      fail_msg: "The default grub password has not been changed"
  when:
      - ubtu20cis_set_grub_password
      - ubtu20cis_rule_1_4_2

- name: Ensure root password has been changed
  ansible.builtin.assert:
      that:
          - '"$6$this_is_needs_to_be_changed" not in ubtu20cis_root_pw'
          - '"$6$" in ubtu20cis_root_pw'
      fail_msg: "The root password set does not pass checks"
  when:
      - ubtu20cis_set_root_password
      - ubtu20cis_rule_1_4_4

- name: Import preliminary tasks
  ansible.builtin.import_tasks: prelim.yml
  tags:
      - prelim_tasks
      - run_audit

- name: Run pre remediation audit tasks
  ansible.builtin.import_tasks: pre_remediation_audit.yml
  when:
      - run_audit
  tags:
      - run_audit

- ansible.builtin.import_tasks: parse_etc_password.yml
  when:
      - ubtu20cis_section5_patch or
        ubtu20cis_section6_patch

- name: Gather the package facts
  ansible.builtin.package_facts:
      manager: auto
  tags:
      - always

- name: Include section 1 patches
  ansible.builtin.import_tasks: section_1/main.yml
  when:
      - ubtu20cis_section1_patch
  tags:
      - section1

- name: Include section 2 patches
  ansible.builtin.import_tasks: section_2/main.yml
  when:
      - ubtu20cis_section2_patch
  tags:
      - section2

- name: Include section 3 patches
  ansible.builtin.import_tasks: section_3/main.yml
  when:
      - ubtu20cis_section3_patch
  tags:
      - section3

- name: Include section 4 patches
  ansible.builtin.import_tasks: section_4/main.yml
  when:
      - ubtu20cis_section4_patch
  tags:
      - section4

- name: Include section 5 patches
  ansible.builtin.import_tasks: section_5/main.yml
  when:
      - ubtu20cis_section5_patch
  tags:
      - section5

- name: Include section 6 patches
  ansible.builtin.import_tasks: section_6/main.yml
  when:
      - ubtu20cis_section6_patch
  tags:
      - section6

- name: flush handlers
  ansible.builtin.meta: flush_handlers

- name: reboot system
  block:
      - name: reboot system if not skipped
        ansible.builtin.reboot:
        when:
            - not skip_reboot

      - name: Warning a reboot required but skip option set
        ansible.builtin.debug:
            msg: "Warning!! changes have been made that require a reboot to be implemented but skip reboot was set - Can affect compliance check results"
        changed_when: true
        when:
            - skip_reboot

- name: run post remediation tasks
  import_tasks: post.yml
  tags:
      - post_tasks
      - always

- name: Run post audit
  ansible.builtin.import_tasks: post_remediation_audit.yml
  when:
      - run_audit

- name: Show Audit Summary
  ansible.builtin.debug:
      msg: "{{ audit_results.split('\n') }}"
  when:
      - run_audit
  tags:
      - run_audit

- name: Output Warning count and control IDs affected
  ansible.builtin.debug:
      msg: "You have {{ warn_count }} warning(s) that require investigating that are related to the following benchmark ID(s) {{ warn_control_list }}"
  tags:
      - always
